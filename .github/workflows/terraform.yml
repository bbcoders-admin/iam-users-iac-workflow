name: 'Terraform troocart IAM Account One time Setup'
on:
  push:
    branches:
      - release/*
      - main
  pull_request:
      branches:
      - release/*
      - main
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      - name: Configure Environment variables
        id: environments
        run: |
          echo "Running on branch ${{ github.ref_name }}"
          branch_prefix=$(echo ${{ github.ref_name }} |  cut -d'/' -f 1)
          client_name=$(echo ${{ github.ref_name }} |  cut -d'/' -f 2)
          echo "Branch Name $branch_prefix
          echo "Client Name $client_name"
          if [ branch_prefix = "release" ]; then
            echo "::set-output name=env_name::$client_name"
          fi
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: troocart/iam-users-iac
          ref: ${{github.ref_name}}
          token: ${{ secrets.GH_PAT }}

      - name: Terraform Format
        id: fmt
        run: |
          terraform fmt -check
          echo "environment - ${{ steps.environments.name}}"
      
      - name: Terraform Init
        id: init
        run: terraform init

      # - name: Terraform Validate
      #   id: validate
      #   run: terraform validate -no-color

      # - name: Terraform Plan
      #   id: plan
      #   if: github.event_name == 'pull_request'
      #   run: terraform plan -no-color
      #   continue-on-error: true

      # # - name: Update Pull Request
      # #   uses: actions/github-script@0.9.0
      # #   if: github.event_name == 'pull_request'
      # #   env:
      # #     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      # #   with:
      # #     github-token: ${{ secrets.GH_PAT }}
      # #     script: |
      # #       const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
      # #       #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
      # #       #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      # #       #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

      # #       <details><summary>Show Plan</summary>

      # #       \`\`\`\n
      # #       ${process.env.PLAN}
      # #       \`\`\`

      # #       </details>

      # #       *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

      # #       github.issues.createComment({
      # #         issue_number: context.issue.number,
      # #         owner: context.repo.owner,
      # #         repo: context.repo.repo,
      # #         body: output
      # #       })

      # - name: Terraform Plan Status
      #   if: steps.plan.outcome == 'failure'
      #   run: exit 1

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform apply -auto-approve

      # - name: Commit Terraform state changes
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   uses: EndBug/add-and-commit@v7
      #   with:
      #     author_name: troocart
      #     author_email: troocart@gmail.com
      #     message: 'update state files'
      #     add: ["./state/terraform.tfstate", "./state/terraform.tfstate.backup"]




